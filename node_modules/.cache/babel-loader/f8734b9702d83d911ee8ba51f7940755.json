{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshcorp\\\\Desktop\\\\WEB CAREER\\\\Facerecognition\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 220\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFacelocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftcol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightcol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputchange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFacelocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputchange: this.onInputchange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshcorp/Desktop/WEB CAREER/Facerecognition/smartbrain/src/App.js"],"names":["React","Component","Particles","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Signin","Register","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFacelocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftcol","left_col","topRow","top_row","rightcol","right_col","bottomRow","bottom_row","displayFaceBox","onInputchange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Navigation from'./components/Navigation/Navigation';\r\nimport FaceRecognition from'./components/FaceRecognition/FaceRecognition';\r\nimport Logo from'./components/Logo/Logo';\r\nimport ImageLinkForm from'./components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from'./components/Rank/Rank';\r\nimport Signin from'./components/Signin/Signin';\r\nimport Register from'./components/Register/Register';\r\nimport './App.css'; \r\nconst particlesOptions = { \r\n  \r\n             particles: {\r\n               number:{\r\n                value:30,\r\n                density:{\r\n                 enable:true,\r\n                value_area:220\r\n         }    \r\n     } \r\n   }         \r\n}  \r\n\r\nconst initialState = {\r\n\r\n      input:'',\r\n      imageUrl:'',\r\n      box:{},\r\n      route:'signin',\r\n      isSignedIn:false,\r\n      user:{\r\n        id:'',\r\n        name:'',\r\n        email:'',\r\n        entries: 0,\r\n        joined: ''\r\n\r\n      }\r\n  }\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n \r\n    super();\r\n    this.state = initialState;\r\n\r\n  }\r\n  loadUser =(data) => {\r\n\r\n    this.setState({user:{\r\n      id:data.id,\r\n        name:data.name,\r\n        email:data.email,\r\n        entries:data.entries,\r\n        joined:data.joined\r\n\r\n\r\n    }})\r\n  }\r\n  calculateFacelocation =(data)=> {\r\n   const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box\r\n    const image = document.getElementById('inputimage');\r\n    const width =Number(image.width);\r\n    const height = Number(image.height);\r\n    return { \r\n      leftcol:clarifaiFace.left_col * width,\r\n      topRow:clarifaiFace.top_row * height,\r\n      rightcol:width - (clarifaiFace.right_col * width),\r\n      bottomRow:height - (clarifaiFace.bottom_row * height) \r\n\r\n\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) =>{\r\n    this.setState({box:box});\r\n  }\r\n  onInputchange = (event) => {\r\n    this.setState ({input: event.target.value});\r\n\r\n  }\r\n \r\nonButtonSubmit = ()=>{\r\n\r\n  this.setState({imageUrl:this.state.input});\r\n     fetch('http://localhost:3000/imageurl' , {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            input: this.state.input\r\n         })\r\n\r\n        })\r\n     .then (response =>response.json())\r\n    .then(response => {\r\n      if (response){\r\n\r\n        fetch('http://localhost:3000/image' , {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            id: this.state.user.id \r\n         })\r\n\r\n        }) \r\n        .then(response=> response.json())\r\n        .then (count => {\r\n          this.setState(Object.assign(this.state.user,  { entries: count}))\r\n           \r\n        })    \r\n\r\n      }\r\n      this.displayFaceBox(this.calculateFacelocation(response))\r\n    })\r\n    .catch(err=> console.log(err));\r\n} \r\n\r\n  onRouteChange=(route) =>{ \r\n    if (route ==='signout'){\r\n      this.setState(initialState)\r\n\r\n    }\r\n    else if (route ==='home'){\r\n      this.setState({isSignedIn:true})\r\n\r\n  }   this.setState({route:route })\r\n\r\n\r\n  }\r\n render() {\r\n\r\n const {isSignedIn, imageUrl, route, box} = this.state;\r\n  return (\r\n          <div className=\"App\">\r\n\r\n              <Particles className ='particles'\r\n               params={particlesOptions}     \r\n                  />\r\n\r\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n      {route ==='home' \r\n    \r\n      ? <div>\r\n      <Logo />\r\n      <Rank \r\n      name={this.state.user.name}\r\n      entries={this.state.user.entries}\r\n      />\r\n      <ImageLinkForm onInputchange={this.onInputchange}onButtonSubmit={this.onButtonSubmit}/>\r\n      <FaceRecognition box={box}imageUrl={imageUrl}/>\r\n      </div>\r\n      : \r\n      (\r\n\r\n        route === 'signin'\r\n        ?\r\n        <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n\r\n        :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n        )\r\n \r\n\r\n    \r\n       }\r\n\r\n    </div>\r\n  );\r\n}\r\n } \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}